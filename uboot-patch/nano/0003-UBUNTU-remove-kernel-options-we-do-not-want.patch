From c2a11743c3d62d97f0e2b9833a8a07f23a034978 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Alfonso=20S=C3=A1nchez-Beato?=
 <alfonso.sanchez-beato@canonical.com>
Date: Fri, 12 Apr 2019 10:18:09 +0200
Subject: [PATCH 1/3] UBUNTU: remove kernel options we do not want

The cbootargs env var contains kernel command line options that we use
in our u-boot script, but we need to remove some options that are not
wanted for Ubuntu Core. Additionally, we remove repeated options.
---
 arch/arm/mach-tegra/cboot_board.c | 82 +++++++++++++++++++++++++++++--
 1 file changed, 77 insertions(+), 5 deletions(-)

diff --git a/arch/arm/mach-tegra/cboot_board.c b/arch/arm/mach-tegra/cboot_board.c
index db1406dbdf..c4b3c3add5 100644
--- a/arch/arm/mach-tegra/cboot_board.c
+++ b/arch/arm/mach-tegra/cboot_board.c
@@ -341,11 +341,70 @@ static int set_ethaddr_from_cboot(void)
 }
 #endif	/* T186 */
 
+static int is_forbidden_option(const char *option, size_t opt_sz)
+{
+#define KERNEL_OPTION(s, a) { .option = s, .len = sizeof(s) - 1, .any_arg = a }
+	struct {
+		const char *option;
+		const size_t len;
+		/* The value of the option can be anything, like option=* */
+		const int any_arg;
+	} forb_vals[] = { KERNEL_OPTION("console=tty0", 0),
+			  KERNEL_OPTION("root=", 1),
+			  KERNEL_OPTION("rw", 0) };
+#undef KERNEL_OPTION
+	int i, num_forb_v;
+
+	num_forb_v = sizeof(forb_vals)/sizeof(forb_vals[0]);
+	for (i = 0; i < num_forb_v; ++i) {
+		if (!forb_vals[i].any_arg && opt_sz != forb_vals[i].len)
+			continue;
+		if (strncmp(option, forb_vals[i].option, forb_vals[i].len) == 0)
+			return 1;
+	}
+
+	return 0;
+}
+
+/* Returns length of token and its start in 'start' */
+static size_t strkok_c(const char *in, char sep, const char **start)
+{
+	size_t size = 0;
+
+	/* Remove initial separators */
+	for (; *in != '\0' && *in == sep; ++in);
+	*start = in;
+	/* Token */
+	for (; *in != '\0' && *in != sep; ++in, ++size);
+
+	return size;
+}
+
+static int is_repeated_option(const char *args, const char *option,
+			      size_t opt_sz)
+{
+	const char *tok_start;
+	size_t tok_sz;
+
+	for (tok_sz = strkok_c(args, ' ', &tok_start);
+	     tok_sz > 0;
+	     tok_sz = strkok_c(tok_start + tok_sz, ' ', &tok_start)) {
+		if (tok_sz != opt_sz)
+			continue;
+		if (strncmp(tok_start, option, opt_sz) == 0)
+			return 1;
+	}
+
+	return 0;
+}
+
 static int set_cbootargs(void)
 {
 	const void *cboot_blob = (void *)cboot_boot_x0;
 	const void *prop;
-	char *bargs, *s;
+	char *bargs, *ptok;
+	const char *tok_start;
+	size_t tok_sz;
 	int node, len, ret = 0;
 
 	/*
@@ -369,9 +428,22 @@ static int set_cbootargs(void)
 	}
 	debug("%s: found 'bootargs' property, len =%d\n",  __func__, len);
 
-	/* CBoot seems to add trailing whitespace - strip it here */
-	s = strdup((char *)prop);
-	bargs = strstrip(s);
+	/* Remove options we do not want in Ubuntu Core */
+	/* We need to init bargs to zero so is_repeated_option() is safe */
+	bargs = calloc(sizeof(char), strlen(prop) + 2);
+	ptok = bargs;
+	for (tok_sz = strkok_c(prop, ' ', &tok_start);
+	     tok_sz > 0;
+	     tok_sz = strkok_c(tok_start + tok_sz, ' ', &tok_start)) {
+		if (is_forbidden_option(tok_start, tok_sz))
+			continue;
+		if (is_repeated_option(bargs, tok_start, tok_sz))
+			continue;
+		memcpy(ptok, tok_start, tok_sz);
+		ptok += tok_sz;
+		*ptok++ = ' ';
+	}
+
 	debug("%s: bootargs = %s!\n", __func__, bargs);
 
         /* Set cbootargs to env for later use by extlinux files */
@@ -379,7 +451,7 @@ static int set_cbootargs(void)
 	if (ret)
 		printf("Failed to set cbootargs from cboot DTB: %d\n", ret);
 
-	free(s);
+	free(bargs);
 	return ret;
 }
 
-- 
2.17.1

